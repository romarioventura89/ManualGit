Configuracion y comandos git 

// commando para agregar en nombre del usuario
git config --global user.name "romarioventura89" 

// para ver si se agrego correctamente el usuario 
git config user.name

// comando para agregar el correo 
git config --global user.email "romario.ventura89@gmail.com"

// comando para saber si se agrego correctamente el correo
git congif user.email

//comando para iniciar un nuevo repositorio
git init

//comando para ver estatus 
git status

//comando para agregar los archivos al proyecto 
// punto para agregar todos o se puede usar la direccion completa del archivo deseado a subir
git add .

//comando para enviar los confirmar los cambios 
git commit -m "algun comentario que ayude a identificar la modificacion o el cammbio realizado"

// comando para regresar un paso al momento de intentar subir cambios (este commando suele ejecutarse despues de un add ya que podriamos no querer agregar un archivo al repositorio o talvez se agrego por equivivacion)

git rm --cached nombrearchivo.txt
//y para verificar el estatus ejecutamos nuevamente el comando git status

// Cuando dentro de nuestras carpetas y tenemos archivos que no deseamos subir por ejemplo .pdf .mp3 .mp4 cualquier extencion hacemos lo siguiente 

1- creamos una archivo de texto en la raiz de nuestra carpeta que esta relacionada al repositorio llamado ".gitignore"
2- dentro del archivo colocamos la siguiente linea
	* .mp3
	* .mp4
y asi enlistamos todas las extenciones de los archivos que deseamos ignorar, literalmente podemos enlistar todas las extenciones que deseemos 

//comando para ver cuantos commit se han realizado dentro del proyecto
git log 

//comando que da un detalle mas a fondo del commit realizado 
git log --stat

//comando para saber el id del commit que se realizo 
git log --oneline

// comando para regresar en la linea de tiempo, con esto podemos regresar a cualquier version de los commit, usando el id que podemos ver apartir del comando anterior "git log --oneline"
git checkout id

//comando para saber cuantas ramas tengo en mi repositorio
git branch

//comando para cambiar de rama 
git checkout master

//comando para crear una nueva rama
git checkout  -b nombredelarama

Se guarda en la rama romario

